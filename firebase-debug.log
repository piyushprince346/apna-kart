[debug] [2021-07-03T16:48:49.733Z] ----------------------------------------------------------------------
[debug] [2021-07-03T16:48:49.734Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\ronit\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js init
[debug] [2021-07-03T16:48:49.735Z] CLI Version:   9.14.0
[debug] [2021-07-03T16:48:49.735Z] Platform:      win32
[debug] [2021-07-03T16:48:49.735Z] Node Version:  v14.17.0
[debug] [2021-07-03T16:48:49.736Z] Time:          Sat Jul 03 2021 22:18:49 GMT+0530 (India Standard Time)
[debug] [2021-07-03T16:48:49.736Z] ----------------------------------------------------------------------
[debug] 
[debug] [2021-07-03T16:48:49.741Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-07-03T16:48:49.742Z] > authorizing via signed-in user (ronitraj560@gmail.com)
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  C:\Users\ronit\Desktop\Project\e-commerce\apna-kart

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2021-07-03T16:49:01.083Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects pageSize=100
[debug] [2021-07-03T16:49:01.683Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects 200
[debug] [2021-07-03T16:49:01.683Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects [omitted]
[info] i  Using project apna-kart-e-commerce (apna-kart e-commerce) 
[info] 
=== Database Setup
[info] i  database: ensuring required API firebasedatabase.googleapis.com is enabled... 
[debug] [2021-07-03T16:49:02.565Z] > refreshing access token with scopes: ["email","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","openid"]
[debug] [2021-07-03T16:49:02.565Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2021-07-03T16:49:02.877Z] <<< HTTP RESPONSE 200 {"cache-control":"no-cache, no-store, max-age=0, must-revalidate","expires":"Mon, 01 Jan 1990 00:00:00 GMT","date":"Sat, 03 Jul 2021 16:49:02 GMT","pragma":"no-cache","content-type":"application/json; charset=utf-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","server":"scaffolding on HTTPServer2","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-07-03T16:49:02.885Z] >>> HTTP REQUEST GET https://serviceusage.googleapis.com/v1/projects/apna-kart-e-commerce/services/firebasedatabase.googleapis.com  
 
[debug] [2021-07-03T16:49:04.686Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 16:49:04 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] +  database: required API firebasedatabase.googleapis.com is enabled 
[info] 
[debug] [2021-07-03T16:49:04.688Z] >>> HTTP REQUEST GET https://firebasedatabase.googleapis.com/v1beta/projects/apna-kart-e-commerce/locations/-/instances/apna-kart-e-commerce-default-rtdb  
 
[debug] [2021-07-03T16:49:05.345Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 16:49:05 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firebase Realtime Database Security Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[debug] [2021-07-03T16:49:14.588Z] >>> HTTP REQUEST GET https://apna-kart-e-commerce-default-rtdb.asia-southeast1.firebasedatabase.app/.settings/rules.json  
 
[debug] [2021-07-03T16:49:15.304Z] <<< HTTP RESPONSE 200 {"server":"nginx","date":"Sat, 03 Jul 2021 16:49:15 GMT","content-type":"application/json; charset=utf-8","content-length":"161","connection":"keep-alive","access-control-allow-origin":"*","cache-control":"no-cache","strict-transport-security":"max-age=31556926; includeSubDomains; preload"}
[info] +  Database Rules for apna-kart-e-commerce-default-rtdb have been written to database.rules.json. 
[info] Future modifications to database.rules.json will update Realtime Database Security Rules when you run
[info] firebase deploy.
[info] 
=== Firestore Setup
[debug] [2021-07-03T16:49:15.309Z] >>> HTTP REQUEST GET https://serviceusage.googleapis.com/v1/projects/apna-kart-e-commerce/services/firestore.googleapis.com  
 
[debug] [2021-07-03T16:49:17.249Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 16:49:17 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-07-03T16:49:17.249Z] >>> HTTP REQUEST GET https://appengine.googleapis.com/v1/apps/apna-kart-e-commerce  
 
[debug] [2021-07-03T16:49:17.932Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 16:49:17 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-07-03T16:49:17.932Z] database_type: CLOUD_FIRESTORE
[debug] [2021-07-03T16:49:17.932Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-07-03T16:49:17.933Z] > authorizing via signed-in user (ronitraj560@gmail.com)
[debug] [2021-07-03T16:49:17.933Z] [iam] checking project apna-kart-e-commerce for permissions ["firebase.projects.get"]
[debug] [2021-07-03T16:49:17.933Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/apna-kart-e-commerce:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2021-07-03T16:49:19.503Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 16:49:19 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=1350","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2021-07-03T16:49:23.155Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/apna-kart-e-commerce/releases?pageSize=10&pageToken=  
 
[debug] [2021-07-03T16:49:24.592Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 16:49:24 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-07-03T16:49:24.593Z] Found ruleset: projects/apna-kart-e-commerce/rulesets/ef0b36f7-5bf6-4ba9-9374-12a0b085220b
[debug] [2021-07-03T16:49:24.593Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/apna-kart-e-commerce/rulesets/ef0b36f7-5bf6-4ba9-9374-12a0b085220b  
 
[debug] [2021-07-03T16:49:26.047Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 16:49:25 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2021-07-03T16:49:28.410Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/apna-kart-e-commerce/databases/(default)/collectionGroups/-/indexes  
 
[debug] [2021-07-03T16:49:28.410Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/apna-kart-e-commerce/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false  
 
[debug] [2021-07-03T16:49:28.915Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 16:49:28 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-07-03T16:49:28.967Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 16:49:28 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
=== Functions Setup
[info] 
[info] A functions directory will be created in your project with a Node.js
[info] package pre-configured. Functions can be deployed with firebase deploy.
[info] 
[debug] [2021-07-03T16:49:28.971Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-07-03T16:49:28.971Z] > authorizing via signed-in user (ronitraj560@gmail.com)
[debug] [2021-07-03T16:49:28.972Z] [iam] checking project apna-kart-e-commerce for permissions ["firebase.projects.get"]
[debug] [2021-07-03T16:49:28.972Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/apna-kart-e-commerce:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2021-07-03T16:49:30.563Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 16:49:30 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=1328","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-07-03T16:49:30.564Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/apna-kart-e-commerce/services/cloudfunctions.googleapis.com:enable  
 
[debug] [2021-07-03T16:49:30.564Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/apna-kart-e-commerce/services/runtimeconfig.googleapis.com:enable  
 
[debug] [2021-07-03T16:49:32.394Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 16:49:32 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-07-03T16:49:32.411Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 16:49:32 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] +  Wrote functions/package.json 
[info] +  Wrote functions/.eslintrc.js 
[info] +  Wrote functions/index.js 
[info] +  Wrote functions/.gitignore 
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
[debug] [2021-07-03T16:50:15.935Z] >>> [apiv2][query] GET https://www.gstatic.com/firebasejs/releases.json [none]
[debug] [2021-07-03T16:50:16.142Z] <<< [apiv2][status] GET https://www.gstatic.com/firebasejs/releases.json 200
[debug] [2021-07-03T16:50:16.143Z] <<< [apiv2][body] GET https://www.gstatic.com/firebasejs/releases.json {"current":{"version":"8.7.0","browserURL":"https://www.gstatic.com/firebasejs/8.7.0/firebase.js","packageURL":"https://www.gstatic.com/firebasejs/8.7.0/firebase.tgz"},"live":{"version":"8.7","browserURL":"https://www.gstatic.com/firebasejs/live/8.7/firebase.js","packageURL":"https://www.gstatic.com/firebasejs/live/8.7/firebase.tgz"},"components":{"analytics":"https://www.gstatic.com/firebasejs/8.7.0/firebase-analytics.js","app":"https://www.gstatic.com/firebasejs/8.7.0/firebase-app.js","app-check":"https://www.gstatic.com/firebasejs/8.7.0/firebase-app-check.js","auth":"https://www.gstatic.com/firebasejs/8.7.0/firebase-auth.js","database":"https://www.gstatic.com/firebasejs/8.7.0/firebase-database.js","firestore":"https://www.gstatic.com/firebasejs/8.7.0/firebase-firestore.js","functions":"https://www.gstatic.com/firebasejs/8.7.0/firebase-functions.js","installations":"https://www.gstatic.com/firebasejs/8.7.0/firebase-installations.js","messaging":"https://www.gstatic.com/firebasejs/8.7.0/firebase-messaging.js","storage":"https://www.gstatic.com/firebasejs/8.7.0/firebase-storage.js","performance":"https://www.gstatic.com/firebasejs/8.7.0/firebase-performance.js","remote-config":"https://www.gstatic.com/firebasejs/8.7.0/firebase-remote-config.js","firestore.memory":"https://www.gstatic.com/firebasejs/8.7.0/firebase-firestore.memory.js"}}
[info] +  Wrote  “build”/index.html 
[info] 
[info] i  Detected a .git folder at C:\Users\ronit\Desktop\Project\e-commerce\apna-kart 
[info] i  Authorizing with GitHub to upload your service account to a GitHub repository's secrets store. 
[info] 
[info] Visit this URL on this device to log in:
[info] https://github.com/login/oauth/authorize?client_id=89cf50f02ac6aaed3484&state=392706988&redirect_uri=http%3A%2F%2Flocalhost%3A9005&scope=read%3Auser%20repo%20public_repo
[info] 
[info] Waiting for authentication...
[debug] [2021-07-03T16:50:51.202Z] >>> HTTP REQUEST POST https://github.com/login/oauth/access_token  
 {"client_id":"89cf50f02ac6aaed3484","client_secret":"3330d14abc895d9a74d5f17cd7a00711fa2c5bf0","code":"62c5e86141fecb89e777","redirect_uri":"http://localhost:9005","state":"392706988"}
[debug] [2021-07-03T16:50:51.620Z] <<< HTTP RESPONSE 200 {"server":"GitHub.com","date":"Sat, 03 Jul 2021 16:50:51 GMT","content-type":"application/json; charset=utf-8","transfer-encoding":"chunked","vary":"X-PJAX, Accept-Encoding, Accept, X-Requested-With","permissions-policy":"interest-cohort=()","etag":"W/\"03e6944f48563c89cc8c43fe3be50ed2\"","cache-control":"max-age=0, private, must-revalidate","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"0","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","expect-ct":"max-age=2592000, report-uri=\"https://api.github.com/_private/browser/errors\"","content-security-policy":"default-src 'none'; base-uri 'self'; block-all-mixed-content; connect-src 'self' uploads.github.com www.githubstatus.com collector.githubapp.com api.github.com github-cloud.s3.amazonaws.com github-production-repository-file-5c1aeb.s3.amazonaws.com github-production-upload-manifest-file-7fdce7.s3.amazonaws.com github-production-user-asset-6210df.s3.amazonaws.com cdn.optimizely.com logx.optimizely.com/v1/events translator.github.com wss://alive.github.com; font-src github.githubassets.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com render-temp.githubusercontent.com viewscreen.githubusercontent.com; img-src 'self' data: github.githubassets.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com secured-user-images.githubusercontent.com/ *.githubusercontent.com; manifest-src 'self'; media-src 'none'; script-src github.githubassets.com; style-src 'unsafe-inline' github.githubassets.com; worker-src github.com/socket-worker-3f088aa2.js gist.github.com/socket-worker-3f088aa2.js","x-github-request-id":"D9F8:38EE:1070160:11B43AE:60E0956B"}
[debug] [2021-07-03T16:50:51.623Z] >>> [apiv2][query] GET https://api.github.com/user [none]
[debug] [2021-07-03T16:50:52.052Z] <<< [apiv2][status] GET https://api.github.com/user 200
[debug] [2021-07-03T16:50:52.052Z] <<< [apiv2][body] GET https://api.github.com/user {"login":"rronit7","id":45827380,"node_id":"MDQ6VXNlcjQ1ODI3Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/45827380?v=4","gravatar_id":"","url":"https://api.github.com/users/rronit7","html_url":"https://github.com/rronit7","followers_url":"https://api.github.com/users/rronit7/followers","following_url":"https://api.github.com/users/rronit7/following{/other_user}","gists_url":"https://api.github.com/users/rronit7/gists{/gist_id}","starred_url":"https://api.github.com/users/rronit7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rronit7/subscriptions","organizations_url":"https://api.github.com/users/rronit7/orgs","repos_url":"https://api.github.com/users/rronit7/repos","events_url":"https://api.github.com/users/rronit7/events{/privacy}","received_events_url":"https://api.github.com/users/rronit7/received_events","type":"User","site_admin":false,"name":"Ronit Raj","company":null,"blog":"","location":null,"email":null,"hireable":null,"bio":null,"twitter_username":null,"public_repos":0,"public_gists":0,"followers":0,"following":0,"created_at":"2018-12-12T16:38:11Z","updated_at":"2021-07-03T16:50:50Z","private_gists":0,"total_private_repos":0,"owned_private_repos":0,"disk_usage":0,"collaborators":0,"two_factor_authentication":false,"plan":{"name":"free","space":976562499,"collaborators":0,"private_repos":10000}}
[info] 
[info] +  Success! Logged into GitHub as rronit7 
[info] 
[debug] [2021-07-03T16:51:23.700Z] >>> [apiv2][query] GET https://api.github.com/repos//actions/secrets/public-key type=owner
[debug] [2021-07-03T16:51:24.087Z] <<< [apiv2][status] GET https://api.github.com/repos//actions/secrets/public-key 404
[debug] [2021-07-03T16:51:24.087Z] <<< [apiv2][body] GET https://api.github.com/repos//actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2021-07-03T16:51:25.602Z] >>> [apiv2][query] GET https://api.github.com/repos//actions/secrets/public-key type=owner
[debug] [2021-07-03T16:51:25.976Z] <<< [apiv2][status] GET https://api.github.com/repos//actions/secrets/public-key 404
[debug] [2021-07-03T16:51:25.976Z] <<< [apiv2][body] GET https://api.github.com/repos//actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2021-07-03T17:13:28.808Z] ----------------------------------------------------------------------
[debug] [2021-07-03T17:13:28.811Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\ronit\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js init
[debug] [2021-07-03T17:13:28.811Z] CLI Version:   9.14.0
[debug] [2021-07-03T17:13:28.811Z] Platform:      win32
[debug] [2021-07-03T17:13:28.812Z] Node Version:  v14.17.0
[debug] [2021-07-03T17:13:28.812Z] Time:          Sat Jul 03 2021 22:43:28 GMT+0530 (India Standard Time)
[debug] [2021-07-03T17:13:28.813Z] ----------------------------------------------------------------------
[debug] 
[debug] [2021-07-03T17:13:28.822Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-07-03T17:13:28.823Z] > authorizing via signed-in user (ronitraj560@gmail.com)
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  C:\Users\ronit\Desktop\Project\e-commerce\apna-kart

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2021-07-03T17:13:42.907Z] > refreshing access token with scopes: []
[debug] [2021-07-03T17:13:42.919Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2021-07-03T17:13:43.259Z] <<< HTTP RESPONSE 200 {"expires":"Mon, 01 Jan 1990 00:00:00 GMT","cache-control":"no-cache, no-store, max-age=0, must-revalidate","date":"Sat, 03 Jul 2021 17:13:43 GMT","pragma":"no-cache","content-type":"application/json; charset=utf-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","server":"scaffolding on HTTPServer2","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-07-03T17:13:43.273Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects pageSize=100
[debug] [2021-07-03T17:13:43.881Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects 200
[debug] [2021-07-03T17:13:43.881Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects [omitted]
[info] i  Using project apna-kart-e-commerce (apna-kart e-commerce) 
[info] 
=== Database Setup
[info] i  database: ensuring required API firebasedatabase.googleapis.com is enabled... 
[debug] [2021-07-03T17:13:44.732Z] > refreshing access token with scopes: ["email","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","openid"]
[debug] [2021-07-03T17:13:44.732Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2021-07-03T17:13:45.060Z] <<< HTTP RESPONSE 200 {"date":"Sat, 03 Jul 2021 17:13:45 GMT","pragma":"no-cache","expires":"Mon, 01 Jan 1990 00:00:00 GMT","cache-control":"no-cache, no-store, max-age=0, must-revalidate","content-type":"application/json; charset=utf-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","server":"scaffolding on HTTPServer2","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-07-03T17:13:45.070Z] >>> HTTP REQUEST GET https://serviceusage.googleapis.com/v1/projects/apna-kart-e-commerce/services/firebasedatabase.googleapis.com  
 
[debug] [2021-07-03T17:13:46.897Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 17:13:46 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] +  database: required API firebasedatabase.googleapis.com is enabled 
[info] 
[debug] [2021-07-03T17:13:46.898Z] >>> HTTP REQUEST GET https://firebasedatabase.googleapis.com/v1beta/projects/apna-kart-e-commerce/locations/-/instances/apna-kart-e-commerce-default-rtdb  
 
[debug] [2021-07-03T17:13:47.439Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 17:13:47 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firebase Realtime Database Security Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[debug] [2021-07-03T17:13:51.597Z] >>> HTTP REQUEST GET https://apna-kart-e-commerce-default-rtdb.asia-southeast1.firebasedatabase.app/.settings/rules.json  
 
[debug] [2021-07-03T17:13:52.253Z] <<< HTTP RESPONSE 200 {"server":"nginx","date":"Sat, 03 Jul 2021 17:13:52 GMT","content-type":"application/json; charset=utf-8","content-length":"161","connection":"keep-alive","access-control-allow-origin":"*","cache-control":"no-cache","strict-transport-security":"max-age=31556926; includeSubDomains; preload"}
[info] +  Database Rules for apna-kart-e-commerce-default-rtdb have been written to database.rules.json. 
[info] Future modifications to database.rules.json will update Realtime Database Security Rules when you run
[info] firebase deploy.
[info] 
=== Firestore Setup
[debug] [2021-07-03T17:13:52.257Z] >>> HTTP REQUEST GET https://serviceusage.googleapis.com/v1/projects/apna-kart-e-commerce/services/firestore.googleapis.com  
 
[debug] [2021-07-03T17:13:54.194Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 17:13:54 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-07-03T17:13:54.195Z] >>> HTTP REQUEST GET https://appengine.googleapis.com/v1/apps/apna-kart-e-commerce  
 
[debug] [2021-07-03T17:13:54.682Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 17:13:54 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-07-03T17:13:54.682Z] database_type: CLOUD_FIRESTORE
[debug] [2021-07-03T17:13:54.683Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-07-03T17:13:54.683Z] > authorizing via signed-in user (ronitraj560@gmail.com)
[debug] [2021-07-03T17:13:54.683Z] [iam] checking project apna-kart-e-commerce for permissions ["firebase.projects.get"]
[debug] [2021-07-03T17:13:54.683Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/apna-kart-e-commerce:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2021-07-03T17:13:56.197Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 17:13:56 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=1304","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2021-07-03T17:14:01.190Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/apna-kart-e-commerce/releases?pageSize=10&pageToken=  
 
[debug] [2021-07-03T17:14:02.620Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 17:14:02 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-07-03T17:14:02.621Z] Found ruleset: projects/apna-kart-e-commerce/rulesets/ef0b36f7-5bf6-4ba9-9374-12a0b085220b
[debug] [2021-07-03T17:14:02.621Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/apna-kart-e-commerce/rulesets/ef0b36f7-5bf6-4ba9-9374-12a0b085220b  
 
[debug] [2021-07-03T17:14:04.067Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 17:14:03 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2021-07-03T17:14:06.678Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/apna-kart-e-commerce/databases/(default)/collectionGroups/-/indexes  
 
[debug] [2021-07-03T17:14:06.678Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/apna-kart-e-commerce/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false  
 
[debug] [2021-07-03T17:14:07.000Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 17:14:06 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-07-03T17:14:07.003Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 17:14:07 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
=== Functions Setup
[info] 
[info] A functions directory will be created in your project with a Node.js
[info] package pre-configured. Functions can be deployed with firebase deploy.
[info] 
[debug] [2021-07-03T17:14:07.006Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-07-03T17:14:07.006Z] > authorizing via signed-in user (ronitraj560@gmail.com)
[debug] [2021-07-03T17:14:07.006Z] [iam] checking project apna-kart-e-commerce for permissions ["firebase.projects.get"]
[debug] [2021-07-03T17:14:07.006Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/apna-kart-e-commerce:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2021-07-03T17:14:08.538Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 17:14:08 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=1298","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-07-03T17:14:08.539Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/apna-kart-e-commerce/services/cloudfunctions.googleapis.com:enable  
 
[debug] [2021-07-03T17:14:08.539Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/apna-kart-e-commerce/services/runtimeconfig.googleapis.com:enable  
 
[debug] [2021-07-03T17:14:10.356Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 17:14:10 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-07-03T17:14:10.412Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 03 Jul 2021 17:14:10 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] +  Wrote functions/package.json 
[info] +  Wrote functions/.eslintrc.js 
[info] +  Wrote functions/index.js 
[info] +  Wrote functions/.gitignore 
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
[debug] [2021-07-03T17:14:41.269Z] >>> [apiv2][query] GET https://www.gstatic.com/firebasejs/releases.json [none]
[debug] [2021-07-03T17:14:41.511Z] <<< [apiv2][status] GET https://www.gstatic.com/firebasejs/releases.json 200
[debug] [2021-07-03T17:14:41.512Z] <<< [apiv2][body] GET https://www.gstatic.com/firebasejs/releases.json {"current":{"version":"8.7.0","browserURL":"https://www.gstatic.com/firebasejs/8.7.0/firebase.js","packageURL":"https://www.gstatic.com/firebasejs/8.7.0/firebase.tgz"},"live":{"version":"8.7","browserURL":"https://www.gstatic.com/firebasejs/live/8.7/firebase.js","packageURL":"https://www.gstatic.com/firebasejs/live/8.7/firebase.tgz"},"components":{"analytics":"https://www.gstatic.com/firebasejs/8.7.0/firebase-analytics.js","app":"https://www.gstatic.com/firebasejs/8.7.0/firebase-app.js","app-check":"https://www.gstatic.com/firebasejs/8.7.0/firebase-app-check.js","auth":"https://www.gstatic.com/firebasejs/8.7.0/firebase-auth.js","database":"https://www.gstatic.com/firebasejs/8.7.0/firebase-database.js","firestore":"https://www.gstatic.com/firebasejs/8.7.0/firebase-firestore.js","functions":"https://www.gstatic.com/firebasejs/8.7.0/firebase-functions.js","installations":"https://www.gstatic.com/firebasejs/8.7.0/firebase-installations.js","messaging":"https://www.gstatic.com/firebasejs/8.7.0/firebase-messaging.js","storage":"https://www.gstatic.com/firebasejs/8.7.0/firebase-storage.js","performance":"https://www.gstatic.com/firebasejs/8.7.0/firebase-performance.js","remote-config":"https://www.gstatic.com/firebasejs/8.7.0/firebase-remote-config.js","firestore.memory":"https://www.gstatic.com/firebasejs/8.7.0/firebase-firestore.memory.js"}}
[debug] [2021-07-03T17:14:41.807Z] Error: C:\Users\ronit\Desktop\Project\e-commerce\apna-kart\"build" contains invalid WIN32 path characters.
    at Object.mkdirsSync (C:\Users\ronit\AppData\Roaming\npm\node_modules\firebase-tools\node_modules\fs-extra\lib\mkdirs\mkdirs-sync.js:18:22)
    at Object.createFileSync (C:\Users\ronit\AppData\Roaming\npm\node_modules\firebase-tools\node_modules\fs-extra\lib\ensure\file.js:40:11)
    at Config.writeProjectFile (C:\Users\ronit\AppData\Roaming\npm\node_modules\firebase-tools\lib\config.js:142:12)
    at C:\Users\ronit\AppData\Roaming\npm\node_modules\firebase-tools\lib\config.js:160:22
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2021-07-06T06:06:48.426Z] ----------------------------------------------------------------------
[debug] [2021-07-06T06:06:48.429Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\ronit\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js init
[debug] [2021-07-06T06:06:48.430Z] CLI Version:   9.14.0
[debug] [2021-07-06T06:06:48.430Z] Platform:      win32
[debug] [2021-07-06T06:06:48.430Z] Node Version:  v14.17.0
[debug] [2021-07-06T06:06:48.432Z] Time:          Tue Jul 06 2021 11:36:48 GMT+0530 (India Standard Time)
[debug] [2021-07-06T06:06:48.432Z] ----------------------------------------------------------------------
[debug] 
[debug] [2021-07-06T06:06:48.436Z] >>> [apiv2][query] GET https://firebase-public.firebaseio.com/cli.json [none]
[debug] [2021-07-06T06:06:48.468Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-07-06T06:06:48.468Z] > authorizing via signed-in user (ronitraj560@gmail.com)
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  C:\Users\ronit\Desktop\Project\e-commerce\apna-kart

[debug] [2021-07-06T06:06:49.558Z] <<< [apiv2][status] GET https://firebase-public.firebaseio.com/cli.json 200
[debug] [2021-07-06T06:06:49.558Z] <<< [apiv2][body] GET https://firebase-public.firebaseio.com/cli.json {"cloudBuildErrorAfter":1594252800000,"cloudBuildWarnAfter":1590019200000,"defaultNode10After":1594252800000,"minVersion":"3.0.5","node8DeploysDisabledAfter":1613390400000,"node8RuntimeDisabledAfter":1615809600000,"node8WarnAfter":1600128000000}
[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2021-07-06T06:07:14.051Z] > refreshing access token with scopes: []
[debug] [2021-07-06T06:07:14.051Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2021-07-06T06:07:14.346Z] <<< HTTP RESPONSE 200 {"pragma":"no-cache","date":"Tue, 06 Jul 2021 06:07:13 GMT","cache-control":"no-cache, no-store, max-age=0, must-revalidate","expires":"Mon, 01 Jan 1990 00:00:00 GMT","content-type":"application/json; charset=utf-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","server":"scaffolding on HTTPServer2","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-07-06T06:07:14.368Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects pageSize=100
[debug] [2021-07-06T06:07:15.065Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects 200
[debug] [2021-07-06T06:07:15.065Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects [omitted]
[info] i  Using project apna-kart-e-commerce (apna-kart e-commerce) 
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
[debug] [2021-07-06T06:07:30.720Z] >>> [apiv2][query] GET https://www.gstatic.com/firebasejs/releases.json [none]
[debug] [2021-07-06T06:07:30.931Z] <<< [apiv2][status] GET https://www.gstatic.com/firebasejs/releases.json 200
[debug] [2021-07-06T06:07:30.931Z] <<< [apiv2][body] GET https://www.gstatic.com/firebasejs/releases.json {"current":{"version":"8.7.0","browserURL":"https://www.gstatic.com/firebasejs/8.7.0/firebase.js","packageURL":"https://www.gstatic.com/firebasejs/8.7.0/firebase.tgz"},"live":{"version":"8.7","browserURL":"https://www.gstatic.com/firebasejs/live/8.7/firebase.js","packageURL":"https://www.gstatic.com/firebasejs/live/8.7/firebase.tgz"},"components":{"analytics":"https://www.gstatic.com/firebasejs/8.7.0/firebase-analytics.js","app":"https://www.gstatic.com/firebasejs/8.7.0/firebase-app.js","app-check":"https://www.gstatic.com/firebasejs/8.7.0/firebase-app-check.js","auth":"https://www.gstatic.com/firebasejs/8.7.0/firebase-auth.js","database":"https://www.gstatic.com/firebasejs/8.7.0/firebase-database.js","firestore":"https://www.gstatic.com/firebasejs/8.7.0/firebase-firestore.js","functions":"https://www.gstatic.com/firebasejs/8.7.0/firebase-functions.js","installations":"https://www.gstatic.com/firebasejs/8.7.0/firebase-installations.js","messaging":"https://www.gstatic.com/firebasejs/8.7.0/firebase-messaging.js","storage":"https://www.gstatic.com/firebasejs/8.7.0/firebase-storage.js","performance":"https://www.gstatic.com/firebasejs/8.7.0/firebase-performance.js","remote-config":"https://www.gstatic.com/firebasejs/8.7.0/firebase-remote-config.js","firestore.memory":"https://www.gstatic.com/firebasejs/8.7.0/firebase-firestore.memory.js"}}
[debug] [2021-07-06T06:07:31.204Z] Error: ENOENT: no such file or directory, open 'C:\Users\ronit\Desktop\Project\e-commerce\apna-kart\build\index.html'
    at Object.openSync (fs.js:498:3)
    at Object.writeFileSync (fs.js:1524:35)
    at Object.createFileSync (C:\Users\ronit\AppData\Roaming\npm\node_modules\firebase-tools\node_modules\fs-extra\lib\ensure\file.js:43:6)
    at Config.writeProjectFile (C:\Users\ronit\AppData\Roaming\npm\node_modules\firebase-tools\lib\config.js:142:12)
    at C:\Users\ronit\AppData\Roaming\npm\node_modules\firebase-tools\lib\config.js:160:22
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
[error] 
[error] Error: An unexpected error has occurred.
